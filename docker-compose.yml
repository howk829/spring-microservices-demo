services:
  config-server:
    image: config-server
    container_name: config-server
    networks:
      - microservices-network
    ports:
      - "8888:8888"

  discovery-server:
    image: discovery-server
    container_name: discovery-server
    networks:
      - microservices-network
    ports:
      - "8761:8761"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.3
    container_name: elasticsearch
    networks:
    - microservices-network
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # Adjust memory usage
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - //c/workspace/microservices-example/elk/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.3
    container_name: logstash
    networks:
      - microservices-network
    ports:
      - "5000:5000" # Logstash input
      - "5044:5044" # Filebeat input
    volumes:
      - //c/workspace/microservices-example/elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # edit to your own logstash.conf location

  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.3
    container_name: kibana
    networks:
      - microservices-network
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.5.3
    container_name: filebeat
    user: root
    volumes:
      - /c/workspace/microservices-example/centralized-logs:/centralized-log:ro # Mount the centralized log directory
      - ./elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro # Mount the Filebeat configuration file
    depends_on:
      - logstash
    networks:
      - microservices-network

  kafka:
      image: confluentinc/cp-kafka:latest
      hostname: kafka
      container_name: kafka
      ports:
        - "9092:9092"
        - "9093:9093"
      environment:
        KAFKA_KRAFT_MODE: "true"  # This enables KRaft mode in Kafka.
        KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both broker and controller.
        KAFKA_NODE_ID: 1  # A unique ID for this Kafka instance.
        KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Defines the controller voters.
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_LOG_DIRS: /var/lib/kafka/data  # Where Kafka stores its logs.
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Kafka will automatically create topics if needed.
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Since weâ€™re running one broker, one replica is enough.
        KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalancing.
        CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"  # A unique ID for the Kafka cluster.

networks:
  microservices-network:
    driver: bridge
